name: Slack Commands

on:
  repository_dispatch:
    types: [slack-command]

jobs:
  run-tests:
    name: Run Tests from Slack
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright browsers
        run: npx playwright install chromium
        
      - name: Run Tests
        run: |
          if [ "${{ github.event.client_payload.command }}" = "regression" ]; then
            npm run regression_test
          elif [ "${{ github.event.client_payload.command }}" = "smoke" ]; then
            npm run smoke_test
          elif [ "${{ github.event.client_payload.command }}" = "carrier" ]; then
            npm run on_demand:carrier_overview
          elif [ "${{ github.event.client_payload.command }}" = "return" ]; then
            npm run on_demand:return_overview
          elif [ "${{ github.event.client_payload.command }}" = "shipment" ]; then
            npm run on_demand:shipment_overview
          fi
        env:
          ENVIRONMENT: ${{ github.event.client_payload.environment }}
          BASE_URL: ${{ github.event.client_payload.environment == 'apollo' && 'https://apollo-k8s.parcelperform.com' || 'https://bruno.parcelperform.com' }}
          API_CLIENT_ID: ${{ github.event.client_payload.environment == 'apollo' && secrets.APOLLO_API_CLIENT_ID || secrets.BRUNO_API_CLIENT_ID }}
          API_CLIENT_SECRET: ${{ github.event.client_payload.environment == 'apollo' && secrets.APOLLO_API_CLIENT_SECRET || secrets.BRUNO_API_CLIENT_SECRET }}
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: playwright-report/
          
      - name: Notify Slack
        if: always()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: ${{ github.event.client_payload.channel_id }}
          slack-message: |
            Test run completed!
            Environment: ${{ github.event.client_payload.environment }}
            Test Suite: ${{ github.event.client_payload.command }}
            Status: ${{ job.status }}
            Results: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }} 