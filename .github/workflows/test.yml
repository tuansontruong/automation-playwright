name: Test Automation

on:
  push:
    branches: [ production ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment to run tests'
        required: true
        type: choice
        options:
          - bruno
          - apollo
        default: bruno
      test_suite:
        description: 'Select test suite to run'
        required: true
        type: choice
        options:
          - regression_test
          - (on_demand) carrier_overview
          - (on_demand) return_overview
          - (on_demand) shipment_overview
        default: regression_test

env:
  NODE_VERSION: '18'
  BROWSER: 'chromium'
  HEADLESS: 'true'
  ENVIRONMENT: apollo

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

  smoke-test:
    name: Smoke Test
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install Playwright browsers
        run: npx playwright install chromium
          
      - name: Run Smoke Tests
        run: npm run smoke_test
        env:
          BASE_URL: ${{ github.event_name == 'push' && 'https://www.apollo-k8s.parcelperform.com' || github.event.inputs.environment == 'apollo' && 'https://www.apollo-k8s.parcelperform.com' || 'https://www.bruno.parcelperform.com' }}
          API_CLIENT_ID: ${{ github.event_name == 'push' && secrets.APOLLO_API_CLIENT_ID || github.event.inputs.environment == 'apollo' && secrets.APOLLO_API_CLIENT_ID || secrets.BRUNO_API_CLIENT_ID }}
          API_CLIENT_SECRET: ${{ github.event_name == 'push' && secrets.APOLLO_API_CLIENT_SECRET || github.event.inputs.environment == 'apollo' && secrets.APOLLO_API_CLIENT_SECRET || secrets.BRUNO_API_CLIENT_SECRET }}
          
  main-test:
    name: Main Test
    needs: [setup, smoke-test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/production' || github.event.inputs.test_suite != 'smoke_test'
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install Playwright browsers
        run: npx playwright install chromium
          
      - name: Run Selected Test Suite
        run: |
          if [ "${{ github.event.inputs.test_suite }}" = "regression_test" ]; then
            npm run regression_test
          elif [ "${{ github.event.inputs.test_suite }}" = "(on_demand) carrier_overview" ]; then
            npm run on_demand:carrier_overview
          elif [ "${{ github.event.inputs.test_suite }}" = "(on_demand) return_overview" ]; then
            npm run on_demand:return_overview
          elif [ "${{ github.event.inputs.test_suite }}" = "(on_demand) shipment_overview" ]; then
            npm run on_demand:shipment_overview
          else
            npm run regression_test
          fi
        env:
          BASE_URL: ${{ github.event_name == 'push' && 'https://www.apollo-k8s.parcelperform.com' || github.event.inputs.environment == 'apollo' && 'https://www.apollo-k8s.parcelperform.com' || 'https://www.bruno.parcelperform.com' }}
          API_CLIENT_ID: ${{ github.event_name == 'push' && secrets.APOLLO_API_CLIENT_ID || github.event.inputs.environment == 'apollo' && secrets.APOLLO_API_CLIENT_ID || secrets.BRUNO_API_CLIENT_ID }}
          API_CLIENT_SECRET: ${{ github.event_name == 'push' && secrets.APOLLO_API_CLIENT_SECRET || github.event.inputs.environment == 'apollo' && secrets.APOLLO_API_CLIENT_SECRET || secrets.BRUNO_API_CLIENT_SECRET }}
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: playwright-report/ 